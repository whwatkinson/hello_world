# As noted in the Docker best practices "each container should have only one concern"

version: "3.9"

services:

  abc:
    container_name: hello_world_abc
    build:
      context: projects/abc
      dockerfile: DockerfileAbc

  ada:
    container_name: hello_world_ada
    build:
      context: projects/ada
      dockerfile: DockerfileAda

  agda:
    container_name: hello_world_agda
    build:
      context: projects/agda
      dockerfile: DockerfileAgda

  algol68:
    container_name: hello_world_algol68
    build:
      context: projects/algol68
      dockerfile: DockerfileAlgol68

  apl:
    container_name: hello_world_apl
    build:
      context: projects/apl
      dockerfile: DockerfileApl

  aplette:
    container_name: hello_world_aplette
    build:
      context: projects/aplette
      dockerfile: DockerfileAplette

  arc:
    container_name: hello_world_arc
    build:
      context: projects/arc
      dockerfile: DockerfileArc

  assemblyx86:
    container_name: hello_world_assemblyx86
    build:
      context: projects/assemblyx86
      dockerfile: DockerfileAssemblyx86

  asteria:
    container_name: hello_world_asteria
    build:
      context: projects/asteria
      dockerfile: DockerfileAsteria

  awk:
    container_name: hello_world_awk
    build:
      context: projects/awk
      dockerfile: DockerfileAwk

  ballerina:
    container_name: hello_world_ballerina
    build:
      context: projects/ballerina
      dockerfile: DockerfileBallerina

  basename:
    container_name: hello_world_basename
    build:
      context: projects/basename
      dockerfile: DockerfileBasename

  bash:
    container_name: hello_world_bash
    build:
      context: projects/bash
      dockerfile: DockerfileBash

  basic:
    container_name: hello_world_basic
    build:
      context: projects/basic
      dockerfile: DockerfileBasic

  bcpl:
    container_name: hello_world_bcpl
    build:
      context: projects/bcpl
      dockerfile: DockerfileBcpl

  beanshell:
    container_name: hello_world_beanshell
    build:
      context: projects/beanshell
      dockerfile: DockerfileBeanshell

  befunge98:
    container_name: hello_world_befunge98
    build:
      context: projects/befunge98
      dockerfile: DockerfileBefunge98

  brainfuck:
    container_name: hello_world_brainfuck
    build:
      context: projects/brainfuck
      dockerfile: DockerfileBrainfuck

  c:
    container_name: hello_world_c
    build:
      context: projects/c
      dockerfile: DockerfileC

  candy:
    container_name: hello_world_candy
    build:
      context: projects/candy
      dockerfile: DockerfileCandy

  carbon:
    container_name: hello_world_carbon
    build:
      context: projects/carbon
      dockerfile: DockerfileCarbon

  cat:
    container_name: hello_world_cat
    build:
      context: projects/cat
      dockerfile: DockerfileCat

  ceylon:
    container_name: hello_world_ceylon
    build:
      context: projects/ceylon
      dockerfile: DockerfileCeylon

  chapel:
    container_name: hello_world_chapel
    build:
      context: projects/chapel
      dockerfile: DockerfileChapel

  charcoal:
    container_name: hello_world_charcoal
    build:
      context: projects/charcoal
      dockerfile: DockerfileCharcoal

  clean:
    container_name: hello_world_clean
    build:
      context: projects/clean
      dockerfile: DockerfileClean

  clio:
    container_name: hello_world_clio
    build:
      context: projects/clio
      dockerfile: DockerfileClio

  clojure:
    container_name: hello_world_clojure
    build:
      context: projects/clojure
      dockerfile: DockerfileClojure

  cobol:
    container_name: hello_world_cobol
    build:
      context: projects/cobol
      dockerfile: DockerfileCobol

  coffeescript:
    container_name: hello_world_coffeescript
    build:
      context: projects/coffeescript
      dockerfile: DockerfileCoffeescript

  cpp:
    container_name: hello_world_cpp
    build:
      context: projects/cpp
      dockerfile: DockerfileCpp

  crystal:
    container_name: hello_world_crystal
    build:
      context: projects/crystal
      dockerfile: DockerfileCrystal

  csh:
    container_name: hello_world_csh
    build:
      context: projects/csh
      dockerfile: DockerfileCsh

  csharp:
    container_name: hello_world_csharp
    build:
      context: projects/csharp
      dockerfile: DockerfileCsharp

  cython:
    container_name: hello_world_cython
    build:
      context: projects/cython
      dockerfile: DockerfileCython

  d:
    container_name: hello_world_d
    build:
      context: projects/d
      dockerfile: DockerfileD

  dafny:
    container_name: hello_world_dafny
    build:
      context: projects/dafny
      dockerfile: DockerfileDafny

  dart:
    container_name: hello_world_dart
    build:
      context: projects/dart
      dockerfile: DockerfileDart

  deno:
    container_name: hello_world_deno
    build:
      context: projects/deno
      dockerfile: DockerfileDeno

  dogescript:
    container_name: hello_world_dogescript
    build:
      context: projects/dogescript
      dockerfile: DockerfileDogescript

  dylan:
    container_name: hello_world_dylan
    build:
      context: projects/dylan
      dockerfile: DockerfileDylan

  echo:
    container_name: hello_world_echo
    build:
      context: projects/echo
      dockerfile: DockerfileEcho

  egison:
    container_name: hello_world_egison
    build:
      context: projects/egison
      dockerfile: DockerfileEgison

  elixir:
    container_name: hello_world_elixir
    build:
      context: projects/elixir
      dockerfile: DockerfileElixir

  elvish:
    container_name: hello_world_elvish
    build:
      context: projects/elvish
      dockerfile: DockerfileElvish

  emerald:
    container_name: hello_world_emerald
    build:
      context: projects/emerald
      dockerfile: DockerfileEmerald

  erlang:
    container_name: hello_world_erlang
    build:
      context: projects/erlang
      dockerfile: DockerfileErlang

  euphoria:
    container_name: hello_world_euphoria
    build:
      context: projects/euphoria
      dockerfile: DockerfileEuphoria

  factor:
    container_name: hello_world_factor
    build:
      context: projects/factor
      dockerfile: DockerfileFactor

  fantom:
    container_name: hello_world_fantom
    build:
      context: projects/fantom
      dockerfile: DockerfileFantom

  fennel:
    container_name: hello_world_fennel
    build:
      context: projects/fennel
      dockerfile: DockerfileFennel

  fish:
    container_name: hello_world_fish
    build:
      context: projects/fish
      dockerfile: DockerfileFish

  flix:
    container_name: hello_world_flix
    build:
      context: projects/flix
      dockerfile: DockerfileFlix

  fmt:
    container_name: hello_world_fmt
    build:
      context: projects/fmt
      dockerfile: DockerfileFmt

  forth:
    container_name: hello_world_forth
    build:
      context: projects/forth
      dockerfile: DockerfileForth

  fortran:
    container_name: hello_world_fortran
    build:
      context: projects/fortran
      dockerfile: DockerfileFortran

  freebasic:
    container_name: hello_world_freebasic
    build:
      context: projects/freebasic
      dockerfile: DockerfileFreebasic

  fsharp:
    container_name: hello_world_fsharp
    build:
      context: projects/fsharp
      dockerfile: DockerfileFsharp

  gap:
    container_name: hello_world_gap
    build:
      context: projects/gap
      dockerfile: DockerfileGap

  genie:
    container_name: hello_world_genie
    build:
      context: projects/genie
      dockerfile: DockerfileGenie

  gluon:
    container_name: hello_world_gluon
    build:
      context: projects/gluon
      dockerfile: DockerfileGluon

  gnuhello:
    container_name: hello_world_gnuhello
    build:
      context: projects/gnuhello
      dockerfile: DockerfileGnuhello

  goaldi:
    container_name: hello_world_goaldi
    build:
      context: projects/goaldi
      dockerfile: DockerfileGoaldi

  golang:
    container_name: hello_world_golang
    build:
      context: projects/golang
      dockerfile: DockerfileGolang

  goplus:
    container_name: hello_world_goplus
    build:
      context: projects/goplus
      dockerfile: DockerfileGoplus

  grep:
    container_name: hello_world_grep
    build:
      context: projects/grep
      dockerfile: DockerfileGrep

  groovy:
    container_name: hello_world_groovy
    build:
      context: projects/groovy
      dockerfile: DockerfileGroovy

  hamler:
    container_name: hello_world_hamler
    build:
      context: projects/hamler
      dockerfile: DockerfileHamler

  harbour:
    container_name: hello_world_harbour
    build:
      context: projects/harbour
      dockerfile: DockerfileHarbour

  hare:
    container_name: hello_world_hare
    build:
      context: projects/hare
      dockerfile: DockerfileHare

  haskell:
    container_name: hello_world_haskell
    build:
      context: projects/haskell
      dockerfile: DockerfileHaskell

  haxe:
    container_name: hello_world_haxe
    build:
      context: projects/haxe
      dockerfile: DockerfileHaxe

  head:
    container_name: hello_world_head
    build:
      context: projects/head
      dockerfile: DockerfileHead

  html:
    container_name: hello_world_html
    build:
      context: projects/html
      dockerfile: DockerfileHtml

  hylang:
    container_name: hello_world_hylang
    build:
      context: projects/hylang
      dockerfile: DockerfileHylang

  i:
    container_name: hello_world_i
    build:
      context: projects/i
      dockerfile: DockerfileI

  idris2:
    container_name: hello_world_idris2
    build:
      context: projects/idris2
      dockerfile: DockerfileIdris2

  ioke:
    container_name: hello_world_ioke
    build:
      context: projects/ioke
      dockerfile: DockerfileIoke

  java:
    container_name: hello_world_java
    build:
      context: projects/java
      dockerfile: DockerfileJava

  javascript:
    container_name: hello_world_javascript
    build:
      context: projects/javascript
      dockerfile: DockerfileJavascript

  javascript_is_weird:
    container_name: hello_world_javascript_is_weird
    build:
      context: projects/javascript_is_weird
      dockerfile: DockerfileJavascript_is_weird

  jelly:
    container_name: hello_world_jelly
    build:
      context: projects/jelly
      dockerfile: DockerfileJelly

  jq:
    container_name: hello_world_jq
    build:
      context: projects/jq
      dockerfile: DockerfileJq

  json:
    container_name: hello_world_json
    build:
      context: projects/json
      dockerfile: DockerfileJson

  julia:
    container_name: hello_world_julia
    build:
      context: projects/julia
      dockerfile: DockerfileJulia

  kotlin:
    container_name: hello_world_kotlin
    build:
      context: projects/kotlin
      dockerfile: DockerfileKotlin

  ksh:
    container_name: hello_world_ksh
    build:
      context: projects/ksh
      dockerfile: DockerfileKsh

  latino:
    container_name: hello_world_latino
    build:
      context: projects/latino
      dockerfile: DockerfileLatino

  lisp:
    container_name: hello_world_lisp
    build:
      context: projects/lisp
      dockerfile: DockerfileLisp

  livescript:
    container_name: hello_world_livescript
    build:
      context: projects/livescript
      dockerfile: DockerfileLivescript

  ls:
    container_name: hello_world_ls
    build:
      context: projects/ls
      dockerfile: DockerfileLs

  lua:
    container_name: hello_world_lua
    build:
      context: projects/lua
      dockerfile: DockerfileLua

  make:
    container_name: hello_world_make
    build:
      context: projects/make
      dockerfile: DockerfileMake

  mercury:
    container_name: hello_world_mercury
    build:
      context: projects/mercury
      dockerfile: DockerfileMercury

  miranda:
    container_name: hello_world_miranda
    build:
      context: projects/miranda
      dockerfile: DockerfileMiranda

  mojo:
    container_name: hello_world_mojo
    build:
      context: projects/mojo
      dockerfile: DockerfileMojo

  monkey:
    container_name: hello_world_monkey
    build:
      context: projects/monkey
      dockerfile: DockerfileMonkey

  neko:
    container_name: hello_world_neko
    build:
      context: projects/neko
      dockerfile: DockerfileNeko

  nial:
    container_name: hello_world_nial
    build:
      context: projects/nial
      dockerfile: DockerfileNial

  nim:
    container_name: hello_world_nim
    build:
      context: projects/nim
      dockerfile: DockerfileNim

  nushell:
    container_name: hello_world_nushell
    build:
      context: projects/nushell
      dockerfile: DockerfileNushell

  objectivec:
    container_name: hello_world_objectivec
    build:
      context: projects/objectivec
      dockerfile: DockerfileObjectivec

  ocaml:
    container_name: hello_world_ocaml
    build:
      context: projects/ocaml
      dockerfile: DockerfileOcaml

  octave:
    container_name: hello_world_octave
    build:
      context: projects/octave
      dockerfile: DockerfileOctave

  pascal:
    container_name: hello_world_pascal
    build:
      context: projects/pascal
      dockerfile: DockerfilePascal

  passerine:
    container_name: hello_world_passerine
    build:
      context: projects/passerine
      dockerfile: DockerfilePasserine

  perl:
    container_name: hello_world_perl
    build:
      context: projects/perl
      dockerfile: DockerfilePerl

  php:
    container_name: hello_world_php
    build:
      context: projects/php
      dockerfile: DockerfilePhp

  pike:
    container_name: hello_world_pike
    build:
      context: projects/pike
      dockerfile: DockerfilePike

  pocketlang:
    container_name: hello_world_pocketlang
    build:
      context: projects/pocketlang
      dockerfile: DockerfilePocketlang

  pony:
    container_name: hello_world_pony
    build:
      context: projects/pony
      dockerfile: DockerfilePony

  powershell:
    container_name: hello_world_powershell
    build:
      context: projects/powershell
      dockerfile: DockerfilePowershell

  printenv:
    container_name: hello_world_printenv
    build:
      context: projects/printenv
      dockerfile: DockerfilePrintenv

  prolog:
    container_name: hello_world_prolog
    build:
      context: projects/prolog
      dockerfile: DockerfileProlog

  purescript:
    container_name: hello_world_purescript
    build:
      context: projects/purescript
      dockerfile: DockerfilePurescript

  pwd:
    container_name: hello_world_pwd
    build:
      context: projects/pwd
      dockerfile: DockerfilePwd

  pypy:
    container_name: hello_world_pypy
    build:
      context: projects/pypy
      dockerfile: DockerfilePypy

  python2:
    container_name: hello_world_python2
    build:
      context: projects/python2
      dockerfile: DockerfilePython2

  python3:
    container_name: hello_world_python3
    build:
      context: projects/python3
      dockerfile: DockerfilePython3

  qore:
    container_name: hello_world_qore
    build:
      context: projects/qore
      dockerfile: DockerfileQore

  r:
    container_name: hello_world_r
    build:
      context: projects/r
      dockerfile: DockerfileR

  racket:
    container_name: hello_world_racket
    build:
      context: projects/racket
      dockerfile: DockerfileRacket

  rad:
    container_name: hello_world_rad
    build:
      context: projects/rad
      dockerfile: DockerfileRad

  raku:
    container_name: hello_world_raku
    build:
      context: projects/raku
      dockerfile: DockerfileRaku

  rebol:
    container_name: hello_world_rebol
    build:
      context: projects/rebol
      dockerfile: DockerfileRebol

  red:
    container_name: hello_world_red
    build:
      context: projects/red
      dockerfile: DockerfileRed

  ring:
    container_name: hello_world_ring
    build:
      context: projects/ring
      dockerfile: DockerfileRing

  ruby:
    container_name: hello_world_ruby
    build:
      context: projects/ruby
      dockerfile: DockerfileRuby

  rust:
    container_name: hello_world_rust
    build:
      context: projects/rust
      dockerfile: DockerfileRust

  scala:
    container_name: hello_world_scala
    build:
      context: projects/scala
      dockerfile: DockerfileScala

  scheme:
    container_name: hello_world_scheme
    build:
      context: projects/scheme
      dockerfile: DockerfileScheme

  sed:
    container_name: hello_world_sed
    build:
      context: projects/sed
      dockerfile: DockerfileSed

  seed:
    container_name: hello_world_seed
    build:
      context: projects/seed
      dockerfile: DockerfileSeed

  shell:
    container_name: hello_world_shell
    build:
      context: projects/shell
      dockerfile: DockerfileShell

  simula:
    container_name: hello_world_simula
    build:
      context: projects/simula
      dockerfile: DockerfileSimula

  smalltalk:
    container_name: hello_world_smalltalk
    build:
      context: projects/smalltalk
      dockerfile: DockerfileSmalltalk

  snobol:
    container_name: hello_world_snobol
    build:
      context: projects/snobol
      dockerfile: DockerfileSnobol

  solidity:
    container_name: hello_world_solidity
    build:
      context: projects/solidity
      dockerfile: DockerfileSolidity

  swift:
    container_name: hello_world_swift
    build:
      context: projects/swift
      dockerfile: DockerfileSwift

  tac:
    container_name: hello_world_tac
    build:
      context: projects/tac
      dockerfile: DockerfileTac

  tail:
    container_name: hello_world_tail
    build:
      context: projects/tail
      dockerfile: DockerfileTail

  tclsh:
    container_name: hello_world_tclsh
    build:
      context: projects/tclsh
      dockerfile: DockerfileTclsh

  tea:
    container_name: hello_world_tea
    build:
      context: projects/tea
      dockerfile: DockerfileTea

  tengo:
    container_name: hello_world_tengo
    build:
      context: projects/tengo
      dockerfile: DockerfileTengo

  terraform:
    container_name: hello_world_terraform
    build:
      context: projects/terraform
      dockerfile: DockerfileTerraform

  toml:
    container_name: hello_world_toml
    build:
      context: projects/toml
      dockerfile: DockerfileToml

  typescript:
    container_name: hello_world_typescript
    build:
      context: projects/typescript
      dockerfile: DockerfileTypescript

  typhon:
    container_name: hello_world_typhon
    build:
      context: projects/typhon
      dockerfile: DockerfileTyphon

  uiua:
    container_name: hello_world_uiua
    build:
      context: projects/uiua
      dockerfile: DockerfileUiua

  umka:
    container_name: hello_world_umka
    build:
      context: projects/umka
      dockerfile: DockerfileUmka

  umple:
    container_name: hello_world_umple
    build:
      context: projects/umple
      dockerfile: DockerfileUmple

  unicon:
    container_name: hello_world_unicon
    build:
      context: projects/unicon
      dockerfile: DockerfileUnicon

  v:
    container_name: hello_world_v
    build:
      context: projects/v
      dockerfile: DockerfileV

  vala:
    container_name: hello_world_vala
    build:
      context: projects/vala
      dockerfile: DockerfileVala

  verilog:
    container_name: hello_world_verilog
    build:
      context: projects/verilog
      dockerfile: DockerfileVerilog

  vhdl:
    container_name: hello_world_vhdl
    build:
      context: projects/vhdl
      dockerfile: DockerfileVhdl

  whiley:
    container_name: hello_world_whiley
    build:
      context: projects/whiley
      dockerfile: DockerfileWhiley

  whitespace:
    container_name: hello_world_whitespace
    build:
      context: projects/whitespace
      dockerfile: DockerfileWhitespace

  whoami:
    container_name: hello_world_whoami
    build:
      context: projects/whoami
      dockerfile: DockerfileWhoami

  wren:
    container_name: hello_world_wren
    build:
      context: projects/wren
      dockerfile: DockerfileWren

  wyvern:
    container_name: hello_world_wyvern
    build:
      context: projects/wyvern
      dockerfile: DockerfileWyvern

  xml:
    container_name: hello_world_xml
    build:
      context: projects/xml
      dockerfile: DockerfileXml

  xxd:
    container_name: hello_world_xxd
    build:
      context: projects/xxd
      dockerfile: DockerfileXxd

  yaml:
    container_name: hello_world_yaml
    build:
      context: projects/yaml
      dockerfile: DockerfileYaml

  zig:
    container_name: hello_world_zig
    build:
      context: projects/zig
      dockerfile: DockerfileZig

  zsh:
    container_name: hello_world_zsh
    build:
      context: projects/zsh
      dockerfile: DockerfileZsh
