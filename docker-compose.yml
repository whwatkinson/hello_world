# As noted in the Docker best practices "each container should have only one concern
# CMD ["tail", "-f", "/dev/null"]
# https://learnxinyminutes.com/


version: "3.9"

services:

  algol68:
    container_name: hello_world_algol68
    build:
      context: projects/algol68
      dockerfile: DockerfileAlgol68

  awk:
    container_name: hello_world_awk
    build:
      context: projects/awk
      dockerfile: DockerfileAwk

  bash:
    container_name: hello_world_bash
    build:
      context: projects/bash
      dockerfile: DockerfileBash

  basic:
    container_name: hello_world_basic
    build:
      context: projects/basic
      dockerfile: DockerfileBasic

  beanshell:
    container_name: hello_world_beanshell
    build:
      context: projects/beanshell
      dockerfile: DockerfileBeanshell

  befunge:
    container_name: hello_world_befunge
    build:
      context: projects/befunge
      dockerfile: DockerfileBefunge

  c:
    container_name: hello_world_c
    build:
      context: projects/c
      dockerfile: DockerfileC

  cobol:
    container_name: hello_world_cobol
    build:
      context: projects/cobol
      dockerfile: DockerfileCobol

  coffeescript:
    container_name: hello_world_coffeescript
    build:
      context: projects/coffeescript
      dockerfile: DockerfileCoffeescript

  cpp:
    container_name: hello_world_cpp
    build:
      context: projects/cpp
      dockerfile: DockerfileCpp

  crystal:
    container_name: hello_world_crystal
    build:
      context: projects/crystal
      dockerfile: DockerfileCrystal

  csharp:
    container_name: hello_world_csharp
    build:
      context: projects/csharp
      dockerfile: DockerfileCsharp

  d:
    container_name: hello_world_d
    build:
      context: projects/d
      dockerfile: DockerfileD

  dart:
    container_name: hello_world_dart
    build:
      context: projects/dart
      dockerfile: DockerfileDart

  dogescript:
    container_name: hello_world_dogescript
    build:
      context: projects/dogescript
      dockerfile: DockerfileDogescript

  dylan:
    container_name: hello_world_dylan
    build:
      context: projects/dylan
      dockerfile: DockerfileDylan

  erlang:
    container_name: hello_world_erlang
    build:
      context: projects/erlang
      dockerfile: DockerfileErlang

  elixir:
    container_name: hello_world_elixir
    build:
      context: projects/elixir
      dockerfile: DockerfileElixir

  factor:
    container_name: hello_world_factor
    build:
      context: projects/factor
      dockerfile: DockerfileFactor

  fennel:
    container_name: hello_world_fennel
    build:
      context: projects/fennel
      dockerfile: DockerfileFennel

  fortran:
    container_name: hello_world_fortran
    build:
      context: projects/fortran
      dockerfile: DockerfileFortran

  gap:
    container_name: hello_world_gap
    build:
      context: projects/gap
      dockerfile: DockerfileGap

  genie:
    container_name: hellow_world_genie
    build:
      context: projects/genie
      dockerfile: DockerfileGenie

  golang:
    container_name: hello_world_golang
    build:
      context: projects/golang
      dockerfile: DockerfileGolang

  groovy:
    container_name: hellow_world_groovy
    build:
      context: projects/groovy
      dockerfile: DockerfileGroovy

  haskell:
    container_name: hello_world_haskell
    build:
      context: projects/haskell
      dockerfile: DockerfileHaskell

  java:
    container_name: hello_world_java
    build:
      context: projects/java
      dockerfile: DockerfileJava

  javascript:
    container_name: hello_world_javascript
    build:
      context: projects/javascript
      dockerfile: DockerfileJs

  julia:
    container_name: hello_world_julia
    build:
      context: projects/julia
      dockerfile: DockerfileJulia

  kotlin:
    container_name: hello_world_kotlin
    build:
      context: projects/kotlin
      dockerfile: DockerfileKotlin

  korn:
    container_name: hello_world_ksh
    build:
      context: projects/ksh
      dockerfile: DockerfileKsh

  lisp:
    container_name: hello_world_lisp
    build:
      context: projects/lisp
      dockerfile: DockerfileLisp

  lua:
    container_name: hello_world_lua
    build:
      context: projects/lua
      dockerfile: DockerfileLua

  nial:
    container_name: hello_world_nial
    build:
      context: projects/nial
      dockerfile: DockerfileNial

  nim:
    container_name: hello_world_nim
    build:
      context: projects/nim
      dockerfile: DockerfileNim

  ocaml:
    container_name: hello_world_ocaml
    build:
      context: projects/ocaml
      dockerfile: DockerfileOcaml

  pascal:
    container_name: hello_world_pascal
    build:
      context: projects/pascal
      dockerfile: DockerfilePascal

  perl:
    container_name: hello_world_perl
    build:
      context: projects/perl
      dockerfile: DockerfilePerl

  php:
    container_name: hello_world_php
    build:
      context: projects/php
      dockerfile: DockerfilePhp

  powershell:
    container_name: hello_world_powershell
    build:
      context: projects/powershell
      dockerfile: DockerfilePowershell

  python2:
    container_name: hello_world_python2
    build:
      context: projects/python2
      dockerfile: DockerfilePython2

  python3:
    container_name: hello_world_python3
    build:
      context: projects/python3
      dockerfile: DockerfilePython3

  r:
    container_name: hello_world_r
    build:
      context: projects/r
      dockerfile: DockerfileR

  racket:
    container_name: hello_world_racket
    build:
      context: projects/racket
      dockerfile: DockerfileRacket

  raku:
    container_name: hello_world_raku
    build:
      context: projects/raku
      dockerfile: DockerfileRaku

  rebol:
    container_name: hello_world_rebol
    build:
      context: projects/rebol
      dockerfile: DockerfileRebol

  red:
    container_name: hello_world_red
    build:
      context: projects/red
      dockerfile: DockerfileRed

  ruby:
    container_name: hello_world_ruby
    build:
      context: projects/ruby
      dockerfile: DockerfileRuby

  rust:
    container_name: hello_world_rust
    build:
      context: projects/rust
      dockerfile: DockerfileRust

  scala:
    container_name: hello_world_scala
    build:
      context: projects/scala
      dockerfile: DockerfileScala

  shell:
    container_name: hello_world_shell
    build:
      context: projects/shell
      dockerfile: DockerfileShell

  smalltalk:
    container_name: hello_world_smalltalk
    build:
      context: projects/smalltalk
      dockerfile: DockerfileSmalltalk

  snobol:
    container_name: hello_world_snobol
    build:
      context: projects/snobol
      dockerfile: DockerfileSnobol

  swift:
    container_name: hello_world_swift
    build:
      context: projects/swift
      dockerfile: DockerfileSwift

  #  tcl:
  #    container_name: hello_world_tcl
  #    build:
  #      context: projects/tcl
  #      dockerfile: DockerfileTcl

  typescript:
    container_name: hello_world_typescript
    build:
      context: projects/typescript
      dockerfile: DockerfileTs

  vala:
    container_name: hello_world_vala
    build:
      context: projects/vala
      dockerfile: DockerfileVala

  zig:
    container_name: hello_world_zig
    build:
      context: projects/zig
      dockerfile: DockerfileZig

  zsh:
    container_name: hello_world_zsh
    build:
      context: projects/zsh
      dockerfile: DockerfileZsh


