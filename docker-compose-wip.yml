# As noted in the Docker best practices "each container should have only one concern
# CMD ["tail", "-f", "/dev/null"]
# https://learnxinyminutes.com/


version: "3.9"

services:

  abc:
    container_name: hello_world_abc
    build:
      context: projects/abc
      dockerfile: DockerfileAbc

  ada:
    container_name: hello_world_ada
    build:
      context: projects/ada
      dockerfile: DockerfileAda

  apl:
    container_name: hello_world_apl
    build:
      context: projects/apl
      dockerfile: DockerfileApl

  applescript:
    container_name: hello_world_applescript
    build:
      context: projects/applescript
      dockerfile: DockerfileApplescript

  b:
    container_name: hello_world_b
    build:
      context: projects/b
      dockerfile: DockerfileB

  bcpl:
    container_name: hello_world_bcpl
    build:
      context: projects/bcpl
      dockerfile: DockerfileBcpl

  boo:
    container_name: hello_world_boo
    build:
      context: projects/boo
      dockerfile: DockerfileBoo

  bird:
    container_name: hello_world_bird
    build:
      context: projects/bird
      dockerfile: DockerfileBird

  carbon:
    container_name: hello_world_carbon
    build:
      context: projects/carbon
      dockerfile: DockerfileCarbon

  ceylon:
    container_name: hello_world_ceylon
    build:
      context: projects/ceylon
      dockerfile: DockerfileCeylon

  clojure:
    container_name: hello_world_clojure
    build:
      context: projects/clojure
      dockerfile: DockerfileClojure

  clu:
    container_name: hello_world_clu
    build:
      context: projects/clu
      dockerfile: DockerfileClu

  cobra:
    container_name: hello_world_cobra
    build:
      context: projects/cobra
      dockerfile: DockerfileCobra

  cypher:
    container_name: hello_world_cypher
    build:
      context: projects/cypher
      dockerfile: DockerfileCypher

  d:
    container_name: hello_world_d
    build:
      context: projects/d
      dockerfile: DockerfileD

  e:
    container_name: hello_world_e
    build:
      context: projects/e
      dockerfile: DockerfileE

  delphi:
    container_name: hello_World_delphi
    build:
      context: projects/delphi
      dockerfile: DockerfileDelphi

  eiffel:
    container_name: hello_world_eiffel
    build:
      context: projects/eiffel
      dockerfile: DockerfileEiffel

  elm:
    container_name: hellow_world_elm
    build:
      context: projects/elm
      dockerfile: DockerfileElm

  forth:
    container_name: hello_world_forth
    build:
      context: projects/forth
      dockerfile: DockerfileForth

  genie:
    container_name: hellow_world_genie
    build:
      context: projects/genie
      dockerfile: DockerfileGenie


  idris:
    container_name: hello_world_idris
    build:
      context: projects/idris
      dockerfile: DockerfileIdris

  jade:
    container_name: hello_world_jade
    build:
      context: projects/jade
      dockerfile: DockerfileJade

  lfe:
    container_name: hello_world_lfe
    build:
      context: projects/lfe
      dockerfile: DockerfileLfe

  logo:
    container_name: hello_world_logo
    build:
      context: projects/logo
      dockerfile: DockerfileLogo

  matlab:
    container_name: hello_world_matlab
    build:
      context: projects/matlab
      dockerfile: DockerfileMatlab

  modula:
    container_name: hello_world_modla
    build:
      context: projects/modula
      dockerfile: DockerfileModula

  nim:
    container_name: hello_world_nim
    build:
      context: projects/nim
      dockerfile: DockerfileNim

  nu:
    container_name: hello_world_nu
    build:
      context: projects/nu
      dockerfile: DockerfileNu

  occam:
    container_name: hello_world_occam
    build:
      context: projects/occam
      dockerfile: DockerfileOccam

  oberon:
    container_name: hello_world_oberon
    build:
      context: projects/oberon
      dockerfile: DockerfileOberon

  oberon2:
    container_name: hello_world_oberon2
    build:
      context: projects/oberon2
      dockerfile: DockerfileOberon2

  objectivec:
    container_name: hello_world_objectivec
    build:
      context: projects/objectivec
      dockerfile: DockerfileObjectivec

  oxygene:
    container_name: hello_world_oxygene
    build:
      context: projects/oxygene
      dockerfile: DockerfileOxygene

  parasail:
    container_name: hello_world_parasail
    build:
      context: projects/parasail
      dockerfile: DockerfileParasail

  postgres:
    container_name: hello_world_postgres
    image: postgres:bullseye
    user: postgres
    environment:
      POSTGRES_DB: postgress
      POSTGRES_USER: postgress
      POSTGRES_PASSWORD: postgress
    command:
      [
        "echo",
        "\"SELECT 'Hello, World!' AS hello_message;\"",
        "|",
        "psql",
        "postgresql://postgres:postgress@localhost:5432/postgres",
      ]

  prolog:
    container_name: hello_world_prolog
    build:
      context: projects/prolog
      dockerfile: DockerfileProlog

  ragel:
    container_name: hello_world_ragel
    build:
      context: projects/ragel
      dockerfile: DockerfileRagel

  ring:
    container_name: hello_world_ring
    build:
      context: projects/ring
      dockerfile: DockerfileRing

  self:
    container_name: hello_world_self
    build:
      context: projects/self
      dockerfile: DockerfileSelf

  terraform:
    container_name: hello_world_terraform
    build:
      context: projects/terraform
      dockerfile: DockerfileTerraform

  vala:
    container_name: hello_world_vala
    build:
      context: projects/vala
      dockerfile: DockerfileVala

  y:
    container_name: hello_world_y
    build:
      context: projects/y
      dockerfile: DockerfileY
